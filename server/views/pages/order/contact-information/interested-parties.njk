{% extends "../../../partials/form-layout.njk" %}

{% set pageTitle = "Contact information - Notifying organisation - " + applicationName %}
{% set mainClasses = "app-container govuk-body" %}
{% set section = "Contact information" %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "../../../components/accessible-autocomplete/macro.njk" import accessibleAutocomplete %}

{% set crownCourtHtml %}

  {{ accessibleAutocomplete({
    id: 'crownCourt',
    name: 'crownCourt',
    label: questions.interestedParties.crownCourt,
    options: crownCourts,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set magistrateCourtHtml %}

  {{ accessibleAutocomplete({
    id: 'magistratesCourt',
    name: 'magistratesCourt',
    label: questions.interestedParties.magistratesCourt,
    options: magistratesCourts,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set prisonHtml %}

  {{ accessibleAutocomplete({
    id: 'prison',
    name: 'prison',
    label: questions.interestedParties.prison,
    options: prisons,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set probationRegionHtml %}

  {{ govukSelect({
    id: "probationRegion",
    name: "probationRegion",
    label: {
      text: questions.interestedParties.probationRegion
    },
    items: probationRegions,
    value: responsibleOrganisationRegion.value,
    errorMessage: responsibleOrganisationRegion.error,
    disabled: not isOrderEditable
  }) }}

{% endset %}

{% set yjsRegionHtml %}

  {{ govukSelect({
    id: "yjsRegion",
    name: "yjsRegion",
    label: {
      text: questions.interestedParties.yjsRegion
    },
    items: yjsRegions,
    value: responsibleOrganisationRegion.value,
    errorMessage: responsibleOrganisationRegion.error,
    disabled: not isOrderEditable
  }) }}

{% endset %}

{% set notifyingOrgOptions = [] %}
{% for org in notifyingOrganisations | toOptions(not isOrderEditable) %}
  {% if org.value == 'PRISON' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: prisonHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% elif org.value == 'CROWN_COURT' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: crownCourtHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% elif org.value == 'MAGISTRATES_COURT' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: magistrateCourtHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% else %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push(org), notifyingOrgOptions) %}
  {% endif %}
{% endfor %}

{% set responsibleOrgOptions = [] %}
{% for org in responsibleOrganisations | toOptions(not isOrderEditable) %}
  {% if org.value == 'PROBATION' %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: probationRegionHtml
      },
      disabled: org.disabled
    }), responsibleOrgOptions) %}
  {% elif org.value == 'YJS' %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: yjsRegionHtml
      },
      disabled: org.disabled
    }), responsibleOrgOptions) %}
  {% else %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push(org), responsibleOrgOptions) %}
  {% endif %}
{% endfor %}

{% block formInputs %}

  {% call govukFieldset({
    legend: {
      text: "Notifying organisation",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}

    {{ govukRadios({
      name: "notifyingOrganisation",
      fieldset: {
        legend: {
          text: questions.interestedParties.notifyingOrganisation,
          isPageHeading: true,
          classes: "govuk-fieldset__legend--s"
        }
      },
      hint: {
        text: "Select one option"
      },
      items: notifyingOrgOptions,
      value: notifyingOrganisation.value,
      errorMessage: notifyingOrganisation.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: questions.interestedParties.notifyingOrganisationEmail,
        classes: "govuk-label--s"
      },
      hint: {
        html: "For example, provide an email address for a shared mailbox that your team has access to. Do not provide a personal email address."
      },
      classes: "govuk-!-width-one-half",
      id: "notifyingOrganisationEmail",
      name: "notifyingOrganisationEmail",
      value: notifyingOrganisationEmail.value,
      errorMessage: notifyingOrganisationEmail.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}

  {% call govukFieldset({
    legend: {
      text: "Responsible Officer",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}
    {{ govukInput({
      label: {
        text: questions.interestedParties.responsibleOfficerName,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOfficerName",
      name: "responsibleOfficerName",
      value: responsibleOfficerName.value,
      errorMessage: responsibleOfficerName.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: questions.interestedParties.responsibleOfficerPhoneNumber,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOfficerPhoneNumber",
      name: "responsibleOfficerPhoneNumber",
      type: "tel",
      value: responsibleOfficerPhoneNumber.value,
      errorMessage: responsibleOfficerPhoneNumber.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}

  {% call govukFieldset({
    legend: {
      text: "Responsible Organisation",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}
    {{ govukRadios({
      name: "responsibleOrganisation",
      fieldset: {
        legend: {
          text: questions.interestedParties.responsibleOrganisation,
          isPageHeading: false,
          classes: "govuk-fieldset__legend--s"
        }
      },
      hint: {
        text: "Select one option"
      },
      value: responsibleOrganisation.value,
      errorMessage: responsibleOrganisation.error,
      items: responsibleOrgOptions
    }) }}

    {% call govukFieldset({
      legend: {
        text: questions.interestedParties.responsibleOrganisationAddress,
        classes: "govuk-fieldset__legend--s",
        isPageHeading: false
      }
    }) %}
      {{ govukInput({
        label: {
          text: "Address line 1"
        },
        classes: "govuk-!-width-two-thirds",
        id: "address-line-1",
        name: "responsibleOrganisationAddressLine1",
        value: responsibleOrganisationAddressLine1.value,
        errorMessage: responsibleOrganisationAddressLine1.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Address line 2"
        },
        classes: "govuk-!-width-two-thirds",
        id: "address-line-2",
        name: "responsibleOrganisationAddressLine2",
        value: responsibleOrganisationAddressLine2.value,
        errorMessage: responsibleOrganisationAddressLine2.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Town or city"
        },
        classes: "govuk-!-width-two-thirds",
        id: "address-line-3",
        name: "responsibleOrganisationAddressLine3",
        value: responsibleOrganisationAddressLine3.value,
        errorMessage: responsibleOrganisationAddressLine3.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "County (optional)"
        },
        classes: "govuk-!-width-two-thirds",
        id: "address-line-4",
        name: "responsibleOrganisationAddressLine4",
        value: responsibleOrganisationAddressLine4.value,
        errorMessage: responsibleOrganisationAddressLine4.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Postcode"
        },
        classes: "govuk-!-width-two-thirds",
        id: "postcode",
        name: "responsibleOrganisationAddressPostcode",
        value: responsibleOrganisationAddressPostcode.value,
        errorMessage: responsibleOrganisationAddressPostcode.error,
        disabled: not isOrderEditable
      }) }}

    {% endcall %}

    {{ govukInput({
      label: {
        text: questions.interestedParties.responsibleOrganisationPhoneNumber,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOrganisationPhoneNumber",
      name: "responsibleOrganisationPhoneNumber",
      type: "tel",
      value: responsibleOrganisationPhoneNumber.values,
      errorMessage: responsibleOrganisationPhoneNumber.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: questions.interestedParties.responsibleOrganisationEmail,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOrganisationEmail",
      name: "responsibleOrganisationEmail",
      value: responsibleOrganisationEmail.value,
      errorMessage: responsibleOrganisationEmail.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}


{% endblock %}
